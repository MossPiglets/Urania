<adonisControls:AdonisWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                             xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
                             xmlns:core="clr-namespace:Urania.Core.Data;assembly=Urania.Core"
                             xmlns:desktop="clr-namespace:Urania.Desktop"
                             x:Class="Urania.Desktop.MainWindow"
                             xmlns:local="clr-namespace:Urania.Desktop"
                             xmlns:src="clr-namespace:Urania.Desktop.States"
                             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                             mc:Ignorable="d"
                             Title="Urania" Height="640" Width="540" ResizeMode="CanMinimize">

    <adonisControls:AdonisWindow.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}" />
    </adonisControls:AdonisWindow.Style>
    
    <adonisControls:AdonisWindow.TitleBarContent>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <RibbonMenuButton Label="Pomoc"
                FontFamily="Segoe UI"
                    FontSize="14">
                <RibbonMenuItem Header="Jak korzystać?" />
                <RibbonMenuItem Header="O Uranii" />
                <RibbonMenuItem Header="Otwórz Bruxa.pl" />
            </RibbonMenuButton>
        </StackPanel>
    </adonisControls:AdonisWindow.TitleBarContent>

    <StackPanel>
        <StackPanel Orientation="Horizontal" Margin="50 40 50 20" >
            <TextBlock Text="W technice chainmaille kluczowe jest dokładne określenie parametrów używanych ogniwek, a w szczególności współczynnika AR. Znając tylko dwa z tych parametrów, zawsze możemy wyliczyć pozostałe, ale jest to kłopotliwe, tym bardziej, że czasem mamy je podane w dziwnych jednostkach. Dlatego ten program zrobi to za Ciebie."
					   TextAlignment="Left" TextWrapping="Wrap" Width="300" FontSize="13" />
            <Image Source="/Resources/BruxaLogo.png" Width="100" Margin="20 0 0 0" />
        </StackPanel>
        <TextBlock Text="Wpisz parametry lub wybierz z listy" HorizontalAlignment="Center" FontSize="13" Margin="0 0 0 20" />
        <Grid Margin="50 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <GroupBox Name="LeftUpBorderID" Header="ID (Średnica wewnętrzna)" BorderThickness="1" Grid.Column="0" Grid.Row="0"
                      Margin="0 0 20 45">
                <StackPanel>
                    <StackPanel.Resources>
                        <local:ComparisonConverter x:Key="ComparisonConverter" />
                    </StackPanel.Resources>
                    <StackPanel Orientation="Horizontal" Margin="10 5 5 5" HorizontalAlignment="Center">
                        <RadioButton x:Name="IdMmRadiobutton" GroupName="Id" 
                                     IsChecked="{Binding Path=IdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:IdState.Millimeter}}"/>
                        <TextBox x:Name="IdTextBox" Width="100" VerticalAlignment="Center" Margin="5 0" Text="{Binding WireParameters.Id, Mode=TwoWay}" 
                                 IsEnabled="{Binding Path=IdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:IdState.Millimeter}, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="mm" VerticalAlignment="Center" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5 5" HorizontalAlignment="Center" >
                        <RadioButton GroupName="Id" IsChecked="{Binding Path=IdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:IdState.Inch}}"/>
                        <ComboBox x:Name="IdCalComboBox" Width="100" VerticalAlignment="Center" Margin="5 0" ItemsSource="{Binding Source={local:EnumBindingSource {x:Type core:InchName}}}" 
                                  IsEnabled="{Binding Path=IdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:IdState.Inch}, UpdateSourceTrigger=PropertyChanged}"
                                  SelectionChanged="IdInchComboBox_OnSelectionChanged"/>
                        <TextBlock Text="cal" VerticalAlignment="Center" />
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <GroupBox Name="RightUpBorderWD" Header="WD (Grubość drutu)" BorderThickness="1" Grid.Column="1" Grid.Row="0"
                      Margin="20 0 0 10">
                <StackPanel>
                    <StackPanel.Resources>
                        <local:ComparisonConverter x:Key="ComparisonConverter" />
                    </StackPanel.Resources>

                    <StackPanel Orientation="Horizontal" Margin="0 5 5 5" HorizontalAlignment="Center" >
                        <RadioButton x:Name="WdMmRadiobutton" GroupName="Wd" IsChecked="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Millimeter}}" />
                        <TextBox x:Name="WdTextBox" Width="100" VerticalAlignment="Center" Margin="5 0" Text="{Binding WireParameters.Wd, Mode=TwoWay}"
                                 IsEnabled="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Millimeter}, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="mm" VerticalAlignment="Center" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="5 5" HorizontalAlignment="Center" >
                        <RadioButton GroupName="Wd" IsChecked="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Swg}}" />
                        <TextBlock Text="SWG" VerticalAlignment="Center" Margin="5 0" />
                        <ComboBox x:Name="WdSwgComboBox" Width="100" VerticalAlignment="Center" ItemsSource="{Binding Source={desktop:EnumBindingSource {x:Type core:SwgName}}}"
                                  SelectionChanged="WdSwgComboBox_OnSelectionChanged"
                                  IsEnabled="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Swg}, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="5 5" HorizontalAlignment="Center" >
                        <RadioButton GroupName="Wd" IsChecked="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Awg}}" />
                        <TextBlock Text="AWG" VerticalAlignment="Center" Margin="5 0" />
                        <ComboBox x:Name="WdAwgComboBox" Width="100" VerticalAlignment="Center" ItemsSource="{Binding Source={desktop:EnumBindingSource {x:Type core:AwgName}}}"
                                  IsEnabled="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Awg}, UpdateSourceTrigger=PropertyChanged}"
                                  SelectionChanged="WdAwgComboBox_OnSelectionChanged"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <GroupBox Name="LeftDownBorderOD" Header="OD (Średnica zewnętrzna)" BorderThickness="1" Grid.Column="0" Grid.Row="1"
                      Margin="0 0 20 10">

                <StackPanel Orientation="Horizontal" Margin="5 5" HorizontalAlignment="Center" >
                    <TextBox x:Name="OdTextBox" Width="100" VerticalAlignment="Center" Margin="5 0" Text="{Binding WireParameters.Od, Mode=TwoWay}"/>
                    <TextBlock Text="mm" VerticalAlignment="Center" />
                </StackPanel>
            </GroupBox>

            <GroupBox Name="RightDownBorderAR" Header="AR (Współczynnik proporcji)" BorderThickness="1" Grid.Column="1" Grid.Row="1"
                    Margin="20 0 0 10">
                <TextBox x:Name="ArTextBox" Width="100" Margin="5 5" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding WireParameters.Ar, Mode=TwoWay}"/>
            </GroupBox>
        </Grid>

        <Button Content="Przelicz" HorizontalAlignment="Center" Width="250" Height="40" FontSize="15" Margin="0 20" Click="ButtonCalculate_OnClick"/>
        <Button Content="Wyczyść" HorizontalAlignment="Center" Width="100" Margin="0 0 0 20" Click="CleanButton_Click"/>
    </StackPanel>
</adonisControls:AdonisWindow>