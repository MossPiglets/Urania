<adonisControls:AdonisWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                             xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
                             xmlns:core="clr-namespace:Urania.Core.Data;assembly=Urania.Core"
                             xmlns:desktop="clr-namespace:Urania.Desktop"
                             x:Class="Urania.Desktop.MainWindow"
                             xmlns:local="clr-namespace:Urania.Desktop"
                             xmlns:src="clr-namespace:Urania.Desktop.States"
                             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                             mc:Ignorable="d"
                             Title="Urania" Height="640" Width="540" ResizeMode="CanMinimize">

    <adonisControls:AdonisWindow.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}" />
    </adonisControls:AdonisWindow.Style>
    <adonisControls:AdonisWindow.TitleBarContent>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <Menu Background="#D8A256"
                FontFamily="Segoe UI"
                FontSize="14">
                <MenuItem Header="Pomoc">
                    <MenuItem Background="#FFF9E5" Header="Jak korzystać?" Click="HowToUse_Click" />
                    <MenuItem Background="#FFF9E5" Header="O Uranii" Click="AboutUrania_Click"/>
                    <MenuItem Background="#FFF9E5" Header="Otwórz Bruxa.pl" Click="OpenBruxa_OnClick" />
                </MenuItem>
            </Menu>
        </StackPanel>
    </adonisControls:AdonisWindow.TitleBarContent>

    <StackPanel>
        <StackPanel Orientation="Horizontal" Margin="50 40 50 20" >
            <TextBlock Text="W technice chainmaille kluczowe jest dokładne określenie parametrów używanych ogniwek, a w szczególności współczynnika AR. Znając tylko dwa z tych parametrów, zawsze możemy wyliczyć pozostałe, ale jest to kłopotliwe, tym bardziej, że czasem mamy je podane w dziwnych jednostkach. Dlatego ten program zrobi to za Ciebie."
					   TextAlignment="Left" TextWrapping="Wrap" Width="300" FontSize="13" />
            <Image Source="/Resources/BruxaLogo.png" Width="100" Margin="20 0 0 0" />
        </StackPanel>
        <TextBlock Text="Wpisz parametry lub wybierz z listy" HorizontalAlignment="Center" FontSize="13" Margin="0 0 0 20" />
        <Grid Margin="50 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <GroupBox Name="LeftUpBorderID" Header="ID (Średnica wewnętrzna)" BorderThickness="1" Grid.Column="0" Grid.Row="0"
                      Margin="0 0 20 45">
                <StackPanel>
                    <StackPanel.Resources>
                        <local:ComparisonConverter x:Key="ComparisonConverter" />
                    </StackPanel.Resources>

                    <RadioButton x:Name="IdMmRadiobutton" GroupName="Id" Margin="10 5 5 5" HorizontalAlignment="Center"
                                    IsChecked="{Binding Path=IdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:IdState.Millimeter}}"
                                    Checked="IdMmRadiobutton_Checked">
                        <StackPanel Orientation="Horizontal">
                            <TextBox x:Name="IdTextBox" Width="100" VerticalAlignment="Center" Margin="5 0" Text="{Binding WireParameters.Id, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Mode=TwoWay, TargetNullValue=''}" 
                                            IsEnabled="{Binding Path=IdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:IdState.Millimeter}, UpdateSourceTrigger=PropertyChanged}"
                                            ToolTip="Wpisz odpowiednią wartość średnicy wewnętrznej w milimetrach" PreviewTextInput="AllowOnlyNumbers" DataObject.Pasting="AllowPastOnlyNumbers"/>
                            <TextBlock Text="mm" VerticalAlignment="Center" />
                        </StackPanel>
                    </RadioButton>
                    <RadioButton GroupName="Id" Margin="5 5" HorizontalAlignment="Center"
                                 IsChecked="{Binding Path=IdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:IdState.Inch}}">
                        <StackPanel Orientation="Horizontal">
                            <ComboBox x:Name="IdCalComboBox" Width="100" VerticalAlignment="Center" Margin="5 0" ItemsSource="{Binding Source={local:EnumBindingSource {x:Type core:InchName}}}" 
                                IsEnabled="{Binding Path=IdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:IdState.Inch}, UpdateSourceTrigger=PropertyChanged}"
                                SelectionChanged="IdInchComboBox_OnSelectionChanged"
                                ToolTip="Wybierz z listy wartość w calach"/>
                            <TextBlock Text="cal" VerticalAlignment="Center" />
                        </StackPanel>
                    </RadioButton>
                </StackPanel>
            </GroupBox>
            <GroupBox Name="RightUpBorderWD" Header="WD (Grubość drutu)" BorderThickness="1" Grid.Column="1" Grid.Row="0"
                      Margin="20 0 0 10">
                <StackPanel>
                    <StackPanel.Resources>
                        <local:ComparisonConverter x:Key="ComparisonConverter" />
                    </StackPanel.Resources>
                    <RadioButton x:Name="WdMmRadiobutton" GroupName="Wd" Margin="0 5 5 5" HorizontalAlignment="Center"
                                     IsChecked="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Millimeter}}"
                                     Checked="WdMmRadiobutton_Checked">
                        <StackPanel Orientation="Horizontal">
                            <TextBox x:Name="WdTextBox" Width="100" VerticalAlignment="Center" Margin="5 0" Text="{Binding WireParameters.Wd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, TargetNullValue=''}"
                                IsEnabled="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Millimeter}, UpdateSourceTrigger=PropertyChanged}"
                                ToolTip="Wpisz odpowiednią wartość grubości drutu w milimetrach" PreviewTextInput="AllowOnlyNumbers" DataObject.Pasting="AllowPastOnlyNumbers"/>
                            <TextBlock Text="mm" VerticalAlignment="Center" />
                        </StackPanel>
                    </RadioButton>
                    <RadioButton GroupName="Wd" Margin="5 5" HorizontalAlignment="Center"
                                 IsChecked="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Swg}}"
                                 Checked="WdMmRadiobutton_Checked">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="SWG" VerticalAlignment="Center" Margin="5 0" />
                            <ComboBox x:Name="WdSwgComboBox" Width="100" VerticalAlignment="Center" ItemsSource="{Binding Source={desktop:EnumBindingSource {x:Type core:SwgName}}}"
                                SelectionChanged="WdSwgComboBox_OnSelectionChanged"
                                ToolTip="Wybierz z listy wartość SWG"
                                IsEnabled="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Swg}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </RadioButton>

                    <RadioButton GroupName="Wd" Margin="5 5" HorizontalAlignment="Center"
                                 IsChecked="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Awg}}" 
                                 Checked="WdMmRadiobutton_Checked">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="AWG" VerticalAlignment="Center" Margin="5 0" />
                            <ComboBox x:Name="WdAwgComboBox" Width="100" VerticalAlignment="Center" ItemsSource="{Binding Source={desktop:EnumBindingSource {x:Type core:AwgName}}}"
                                ToolTip="Wybierz z listy wartość AWG"
                                IsEnabled="{Binding Path=WdState, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static src:WdState.Awg}, UpdateSourceTrigger=PropertyChanged}"
                                SelectionChanged="WdAwgComboBox_OnSelectionChanged"/>
                        </StackPanel>
                    </RadioButton>
                </StackPanel>
            </GroupBox>
            <GroupBox Name="LeftDownBorderOD" Header="OD (Średnica zewnętrzna)" BorderThickness="1" Grid.Column="0" Grid.Row="1"
                      Margin="0 0 20 10">

                <StackPanel Orientation="Horizontal" Margin="5 5" HorizontalAlignment="Center" >
                    <TextBox x:Name="OdTextBox" Width="100" VerticalAlignment="Center" Margin="5 0" Text="{Binding WireParameters.Od, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Mode=TwoWay, TargetNullValue=''}"
                             ToolTip="Wpisz odpowiednią wartość średnicy zewnętrznej w milimetrach" PreviewTextInput="AllowOnlyNumbers" DataObject.Pasting="AllowPastOnlyNumbers"/>
                    <TextBlock Text="mm" VerticalAlignment="Center" />
                </StackPanel>
            </GroupBox>

            <GroupBox Name="RightDownBorderAR" Header="AR (Współczynnik proporcji)" BorderThickness="1" Grid.Column="1" Grid.Row="1"
                    Margin="20 0 0 10">
                <TextBox x:Name="ArTextBox" Width="100" Margin="5 5" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding WireParameters.Ar, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Mode=TwoWay, TargetNullValue=''}"
                         ToolTip="Wpisz odpowiednią wartość współczynnika proporcji" PreviewTextInput="AllowOnlyNumbers" DataObject.Pasting="AllowPastOnlyNumbers"/>
            </GroupBox>
        </Grid>
        
        <Button Content="Przelicz" HorizontalAlignment="Center" Width="250" Height="40" FontSize="15" Margin="0 20" Click="ButtonCalculate_OnClick" ToolTip="Oblicz brakujące parametry"/>
        <Button Content="Wyczyść" HorizontalAlignment="Center" Width="100" Margin="0 0 0 20" Click="CleanButton_Click" ToolTip="Wyczyść wszystkie pola"/>
        
    </StackPanel>
</adonisControls:AdonisWindow>